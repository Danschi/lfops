#!/usr/bin/env bash
# {{ ansible_managed }}
# 2022030401

exit_code=0
check_exit_code() {
    if [[ $1 -gt $exit_code ]]; then
        exit_code=$1
    fi
}

source /etc/duplicity/duplicity.conf
source /opt/python-venv/duplicity/bin/activate

# do backups
for SRC in "${BACKUP_SOURCES[@]}"; do
    echo -e "\n\n=== Start of backups for $SRC ===" >> /var/log/duplicity.log
    ionice --class=3 nice --adjustment=19 duplicity \
        --cf-backend="$CF_BACKEND" \
        --copy-links \
        --encrypt-key="$ENCRYPT_KEY" \
        --encrypt-key='{{ duplicity__public_master_long_keyid }}' \
        --exclude-other-filesystems \
        --full-if-older-than="$RETENTION_TIME" \
        --log-file=/var/log/duplicity.log \
        --log-timestamp \
        --num-retries=3 \
        --verbosity="$LOGLEVEL" \
        --volsize=200 \
{% for exclude in duplicity__excludes %}
        --exclude '{{ exclude }}' \
{% endfor %}
        "$SRC" \
        "$BACKUP_DEST$SRC"
    check_exit_code $?

    # Delete all backup sets older than the given time. Old backup sets will not be deleted if
    # backup sets newer than time depend on them. Note, this action cannot be combined with backup
    # or other actions, such as cleanup. Note also that --force will be needed to delete the files
    # instead of just listing them.
    nice --adjustment=19 duplicity remove-older-than "$RETENTION_TIME" \
        --force \
        --log-file=/var/log/duplicity.log \
        --log-timestamp \
        --num-retries=3 \
        --verbosity="$LOGLEVEL" \
        "$BACKUP_DEST$SRC"
    check_exit_code $?
    echo -e "=== End of backups for $SRC ===" >> /var/log/duplicity.log
done

exit $exit_code
