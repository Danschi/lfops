# {{ ansible_managed }}
# 2025070301
# https://bind9.readthedocs.io/en/latest/reference.html

acl "trusted" {
    localhost;
    localnets;
    {% for item in bind__trusted_networks %}
    {{ item }};
    {% endfor %}
};

options {
    allow-new-zones {{ bind__allow_new_zones | ternary('yes', 'no') }};
    allow-query-cache {
        {% for item in bind__allow_query_cache %}
        {{ item }};
        {% endfor %}
    };
    allow-recursion {
        {% for item in bind__allow_recursion %}
        {{ item }};
        {% endfor %}
    };
    allow-transfer {
        {% for item in bind__allow_transfer %}
        {{ item }};
        {% endfor %}
    };
    directory "/var/named";
    disable-empty-zone yes;
    {% if ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version'] <= 8 %}
    {# The dnssec-enable option has been obsoleted and no longer has any effect. DNSSEC responses are always enabled if signatures and other DNSSEC data are present. See https://bind9.readthedocs.io/en/v9.16.16/notes.html#removed-features #}
    dnssec-enable no;
    {% endif %}
    dnssec-validation no;
    dump-file "/var/named/data/cache_dump.db";
    forward only;
    forwarders {
        {% for item in bind__forwarders %}
        {{ item }};
        {% endfor %}
    };
    listen-on port 53 {
        {% for item in bind__listen_on_addresses %}
        {{ item }};
        {% endfor %}
    };
    listen-on-v6 { {{ bind__listen_ipv6 | ternary('any', 'none') }}; };
    managed-keys-directory "/var/named/dynamic";
    memstatistics-file "/var/named/data/named_mem_stats.txt";
    pid-file "/run/named/named.pid";
    recursion {{ bind__recursion | ternary('yes', 'no') }};
    {% if bind__rpz_zone is defined and bind__rpz_zone | length %}
    response-policy { zone "{{ bind__rpz_zone }}"; };
    {% endif %}
    session-keyfile "/run/named/session.key";
    statistics-file "/var/named/data/named_stats.txt";
    version "Linuxfabrik";
};

logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};

zone "." IN {
    type hint;
    file "named.ca";
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";

{% for item in bind__zones %}
zone "{{ item['name'] }}" IN {
    type {{ item['type'] | d('master') }};

    {% if item['type'] | d('master') in ['hint', 'master', 'mirror', 'primary', 'redirect', 'secondary', 'stub'] %}
    file "{{ item['file'] | d(item['name'] ~ '.zone') }}";
    {% endif %}

    {% if item['type'] | d('master') in ['forward', 'primary', 'master', 'secondary', 'slave', 'static-stub', 'stub'] %}
    forwarders {
        {# default: do normal iterative resolution (do not forward) #}
        {% for item in item['forwarders'] | d([]) %}
        {{ item }};
        {% endfor %}
    };
    {% endif %}

    {% if item['type'] | d('master') in ['master', 'mirror', 'primary', 'redirect', 'secondary', 'slave', 'static-stub', 'stub'] %}
    allow-query { trusted; };
    {% endif %}

    {% if item['allow_transfer'] | d([]) | length and item['type'] | d('master') in ['mirror', 'primary', 'master', 'secondary', 'slave'] %}
    allow-transfer {
        {% for item in item['allow_transfer'] | d(['none']) %}
        {{ item }};
        {% endfor %}
    };
    {% endif %}

    {% if item['type'] | d('master') in ['mirror', 'redirect', 'secondary', 'slave', 'stub'] %}
    masters {
        {% for item in item['masters'] | d([]) %}
        {{ item }};
        {% endfor %}
    };
    {% endif %}
};

{% endfor %}

{% for item in bind__keys %}
key "{{ item ['name'] }}" {
  algorithm {{ item['algorithm'] }};
  secret "{{ item['secret'] | ansible.builtin.b64encode }}";
};
{% endfor %}

{% if bind__named_conf_raw is defined and bind__named_conf_raw | length %}
# raw
{{ bind__named_conf_raw }}
{% endif %}
