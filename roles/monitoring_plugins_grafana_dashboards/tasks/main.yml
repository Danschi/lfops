- block:

  - name: 'Make sure that `monitoring_plugins_grafana_dashboards__repo_version` is set'
    ansible.builtin.assert:
      that:
        - 'monitoring_plugins_grafana_dashboards__repo_version | length'
      fail_msg: 'monitoring_plugins_grafana_dashboards__repo_version is unset. Make sure to either set `monitoring_plugins_grafana_dashboards__repo_version` or `lfops__monitoring_plugins_version`.'

  - name: 'Clone the monitoring plugins repo'
    ansible.builtin.import_role:
      name: 'shared'
      tasks_from: 'clone-monitoring-plugins-repo.yml'
    vars:
      shared__monitoring_plugins_version: '{{ monitoring_plugins_grafana_dashboards__repo_version }}'

  - name: 'Flatten Grafana dashboards locally using shell'
    ansible.builtin.shell:
      cmd: |
        set -euo pipefail
        shopt -s nullglob

        mkdir -p /tmp/ansible.monitoring-plugins-repo-flattened/grafana
        for dir in "/tmp/ansible.monitoring-plugins-repo/check-plugins"/*/; do
            # dir ends in a slash, so basename drops it and gives you the plugin name
            plugin=$(basename "$dir")
            # if there's a file named exactly like the directory, copy it
            if [[ -f "$dir/grafana/$plugin.yml" ]]; then
                cp -- "$dir/grafana/$plugin.yml" "/tmp/ansible.monitoring-plugins-repo-flattened/grafana/$plugin.yml"
            fi
        done

        cp -- /tmp/ansible.monitoring-plugins-repo/assets/grafana/*.yml /tmp/ansible.monitoring-plugins-repo-flattened/grafana/
    delegate_to: 'localhost'
    run_once: true
    check_mode: false # run task even if `--check` is specified
    changed_when: false # no change on the remote host

  - name: 'Make sure rsync is installed'
    ansible.builtin.package:
      name: 'rsync'
      state: 'present'

  - name: 'rsync dashboards to /tmp/ansible.monitoring_plugins_grafana_dashboards/'
    ansible.posix.synchronize:
      src: '/tmp/ansible.monitoring-plugins-repo-flattened/grafana/'
      dest: '/tmp/ansible.monitoring_plugins_grafana_dashboards/'
      mode: 'push'

  - name: '/usr/local/bin/grr apply ... # global assets'
    ansible.builtin.command: '/usr/local/bin/grr apply /tmp/ansible.monitoring_plugins_grafana_dashboards/{{ item }}.yml'
    environment:
      GRAFANA_URL: '{{ monitoring_plugins_grafana_dashboards__grafana_url }}'
      GRAFANA_USER: '{{ monitoring_plugins_grafana_dashboard__grafana_service_account_login["username"] }}'
      GRAFANA_TOKEN: '{{ monitoring_plugins_grafana_dashboard__grafana_service_account_login["password"] }}'
      GODEBUG: 'x509ignoreCN=0'
    register: '__monitoring_plugins_grafana_dashboards__grr_apply_result'
    changed_when: '"added" in __monitoring_plugins_grafana_dashboards__grr_apply_result["stdout"] or "updated" in __monitoring_plugins_grafana_dashboards__grr_apply_result["stdout"]'
    loop:
      # note that "folder" needs to be the first
      - 'folder'
      - 'dashboard-default'
      - 'dashboard-icinga'

  - name: '/usr/local/bin/grr apply /tmp/ansible.monitoring_plugins_grafana_dashboards/*.yml'
    ansible.builtin.shell: |
      set -euo pipefail
      for f in /tmp/ansible.monitoring_plugins_grafana_dashboards/*.yml; do
          name=$(basename "$f")
          if [[ "$name" == 'folder.yml' ]]; then
              continue
          fi
          /usr/local/bin/grr apply "$f"
      done
    environment:
      GRAFANA_URL: '{{ monitoring_plugins_grafana_dashboards__grafana_url }}'
      GRAFANA_USER: '{{ monitoring_plugins_grafana_dashboard__grafana_service_account_login["username"] }}'
      GRAFANA_TOKEN: '{{ monitoring_plugins_grafana_dashboard__grafana_service_account_login["password"] }}'
      GODEBUG: 'x509ignoreCN=0'
    args:
      executable: '/usr/bin/bash'
    register: '__monitoring_plugins_grafana_dashboards__grr_apply_result'
    changed_when: '"added" in __monitoring_plugins_grafana_dashboards__grr_apply_result["stdout"] or "updated" in __monitoring_plugins_grafana_dashboards__grr_apply_result["stdout"]'

  - name: 'rm -rf /tmp/ansible.monitoring_plugins_grafana_dashboards'
    ansible.builtin.file:
      path: '/tmp/ansible.monitoring_plugins_grafana_dashboards'
      state: 'absent'

  tags:
    - 'monitoring_plugins_grafana_dashboards'
