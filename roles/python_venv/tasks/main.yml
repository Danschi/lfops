- block:

  - name: 'Set platform/version specific variables'
    ansible.builtin.import_role:
      name: 'shared'
      tasks_from: 'platform-variables.yml'

  - name: 'Combined Packages:'
    ansible.builtin.debug:
      var: 'python_venv__required_packages'

  - name: 'Install the required packages'
    ansible.builtin.package:
      name: '{{ python_venv__required_packages }}'
      state: 'present'

  # - name: 'Deploy /etc/systemd/system/python-venv-update.service'
  #   ansible.builtin.template:
  #     src: 'etc/systemd/system/python-venv-update.service.j2'
  #     dest: '/etc/systemd/system/python-venv-update.service'
  #     owner: 'root'
  #     group: 'root'
  #     mode: 0644

  # - name: 'Deploy /etc/systemd/system/python-venv-update.timer'
  #   ansible.builtin.template:
  #     src: 'etc/systemd/system/python-venv-update.timer.j2'
  #     dest: '/etc/systemd/system/python-venv-update.timer'
  #     owner: 'root'
  #     group: 'root'
  #     mode: 0644

  - name: 'mkdir -p /opt/python-venv'
    ansible.builtin.file:
      path: '/opt/python-venv'
      state: 'directory'
      mode: 0o755

  - ansible.builtin.include_tasks: 'create-venv.yml'
    loop: '{{ python_venv__venvs__combined_var }}'
    loop_control:
      loop_var: 'venv'
    when:
      - 'venv["state"] | d("present") != "absent"'

  - name: 'Remove venvs'
    ansible.builtin.file:
      path: '/opt/python_venv/{{ venv["name"] }}'
      state: 'absent'
    loop: '{{ python_venv__venvs__combined_var }}'
    loop_control:
      loop_var: 'venv'
    when:
      - 'venv["state"] | d("present") == "absent"'

  tags:
    - 'python_venv'
