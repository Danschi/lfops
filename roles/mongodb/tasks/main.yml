- block:

  - name: 'install mongodb-org'
    ansible.builtin.package:
      name: 'mongodb-org'
      state: 'present'

  - name: 'Deploy /etc/mongod.conf'
    ansible.builtin.template:
      src: 'etc/mongod.conf.j2'
      dest: '/etc/mongod.conf'
      owner: 'root'
      group: 'root'
      mode: 0o644
    notify: 'mongodb: systemctl restart mongod.service'

  - name: 'Deploy /etc/logrotate.d/mongod'
    ansible.builtin.template:
      src: 'etc/logrotate.d/mongod.j2'
      dest: '/etc/logrotate.d/mongod'
      owner: 'root'
      group: 'root'
      mode: 0o644

  tags:
    - 'mongodb'


- block:

  - name: 'Deploy /etc/mongodb-dump.conf'
    ansible.builtin.template:
      src: 'etc/mongodb-dump.conf.j2'
      dest: '/etc/mongodb-dump.conf'
      owner: 'root'
      group: 'root'
      mode: 0o600

  - name: 'Deploy /usr/local/sbin/mongodb-dump'
    ansible.builtin.template:
      src: 'usr/local/sbin/mongodb-dump.j2'
      dest: '/usr/local/sbin/mongodb-dump'
      owner: 'root'
      group: 'root'
      mode: 0o755

  - name: 'Deploy /etc/systemd/system/mongodb-dump.service'
    ansible.builtin.template:
      src: 'etc/systemd/system/mongodb-dump.service.j2'
      dest: '/etc/systemd/system/mongodb-dump.service'
      owner: 'root'
      group: 'root'
      mode: 0o644

  - name: 'Deploy /etc/systemd/system/mongodb-dump.timer'
    ansible.builtin.template:
      src: 'etc/systemd/system/mongodb-dump.timer.j2'
      dest: '/etc/systemd/system/mongodb-dump.timer'
      owner: 'root'
      group: 'root'
      mode: 0o644
    register: 'mongodb__dump_systemd_timer_result'

  - name: 'systemctl enable mongodb-dump.timer --now'
    ansible.builtin.systemd:
      name: 'mongodb-dump.timer'
      state: 'started'
      enabled: true
      daemon_reload: '{{ mongodb__dump_systemd_timer_result is changed }}'

  tags:
    - 'mongodb'
    - 'mongodb:dump'


- block:

  - name: 'systemctl {{ mongodb__service_enabled | bool | ternary("enable", "disable") }} mongod.service'
    ansible.builtin.systemd:
      name: 'mongod.service'
      enabled: '{{ mongodb__service_enabled }}'

  - name: 'systemctl {{ mongodb__service_state[:-2] }} mongod.service'
    ansible.builtin.systemd:
      name: 'mongod.service'
      state: '{{ mongodb__service_state }}'
    register: 'mongodb__service_state_result'

  tags:
    - 'mongodb'
    - 'mongodb:state'


- block:

  - name: 'Ensure replicaset "{{ mongodb__conf_replication_repl_set_name__combined_var }}" exists'
    community.mongodb.mongodb_replicaset:
      login_host: '{{ mongodb__conf_net_bind_ip }}'
      login_port: '{{ mongodb__conf_net_port }}'
      replica_set: '{{ mongodb__conf_replication_repl_set_name__combined_var }}'
      members: '{{ mongodb__repl_set_members }}'
      validate: false # prevent error with only one member
      debug: true
    vars:
      ansible_python_interpreter: '/opt/python-venv/pymongo/bin/python3'

  when:
    - 'not mongodb__repl_set_skip_init'
    - 'mongodb__conf_replication_repl_set_name__combined_var | length'
  tags:
    - 'mongodb'
    - 'test'
