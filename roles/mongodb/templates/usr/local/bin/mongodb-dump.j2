#jinja2:lstrip_blocks: True
#!/usr/bin/env bash

# {{ ansible_managed }}
# 2022083101

{% if mongodb__dump_method_mongodump %}
#
# Backup using mongodump
#

HOST='127.0.0.1'
PORT='{{ item.mongodb_net_port | default(27017) }}'
{% if (mongodb_auth_db is defined and mongodb_auth_db|length)
and (mongodb_auth_user is defined and mongodb_auth_user|length)
and (mongodb_auth_password is defined and mongodb_auth_password|length) %}
    {% set use_auth = true %}
USER='{{ mongodb_auth_user | default() }}'
AUTH_DATABASE='{{ mongodb_auth_db | default() }}'
PASSWORD='{{ mongodb_auth_password | default() }}'
{% else %}
    {% set use_auth = false %}
{% endif %}
BACKUP_DIR='{{ mongodb_dump_dir | default('/backup/mongodb-dump') }}{{ item.name }}'
LOGFILE='/tmp/mongodb-dump-log{{ item.name }}'

# detect paths
MONGO=$(which mongo)
MONGODUMP=$(which mongodump)

# make sure we can connect to server
    {% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.getUsers()' &>/dev/null
    {% else %}
$MONGO --host $HOST --port $PORT --eval 'db' &>/dev/null
    {% endif %}

if [ $? -ne 0 ]
then
    echo "Cannot connect to '$HOST'" >&2
    exit 1
fi

{% if mongodb_check_hidden_before_backup|bool == true %}
# check if the instance is hidden
    {% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.isMaster()' | grep '"hidden" : true' &>/dev/null
    {% else %}
$MONGO --host $HOST --port $PORT --eval 'db.isMaster()' | grep '"hidden" : true' &>/dev/null
    {% endif %}

if [ $? -ne 0 ]
then
    echo "Skipping, the instance is not hidden"
    exit 0
fi
{% endif %}

# remove old backups
rm -rf $BACKUP_DIR/
mkdir -p $BACKUP_DIR

{% if use_auth == true %}
$MONGODUMP --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD {% if mongodb_dump_oplog == true %}--oplog {% endif %}--out "$BACKUP_DIR/temp" > $LOGFILE 2>&1
{% else  %}
$MONGODUMP --host $HOST --port $PORT {% if mongodb_dump_oplog == true %}--oplog {% endif %}--out "$BACKUP_DIR/temp" > $LOGFILE 2>&1
{% endif %}
if [ $? -ne 0 ]; then
    cat $LOGFILE >&2
fi
rm $LOGFILE

cd "$BACKUP_DIR" 1> /dev/null
tar -cvzf "mongodb-dump.tar.gz" -C "$BACKUP_DIR/temp/" . 1> /dev/null
rm -rf "$BACKUP_DIR/temp/" 1> /dev/null
{% endif %}

{% if mongodb__dump_method_file_based %}
#
# File based backup (copies /var/lib/mongo to the backup directory)
#

HOST='127.0.0.1'
PORT='{{ item.mongodb_net_port | default(27017) }}'
USER='{{ mongodb_auth_user | default() }}'
AUTH_DATABASE='{{ mongodb_auth_db | default() }}'
PASSWORD='{{ mongodb_auth_password | default() }}'
BACKUP_DIR='{{ mongodb_file_backup_dir | default('/backup/var-lib-mongo') }}{{ item.name }}'

{% if (mongodb_auth_db is defined and mongodb_auth_db|length)
and (mongodb_auth_user is defined and mongodb_auth_user|length)
and (mongodb_auth_password is defined and mongodb_auth_password|length) %}
    {% set use_auth = true %}
{% else %}
    {% set use_auth = false %}
{% endif %}

# detect paths
MONGO=$(which mongo)
MONGODUMP=$(which mongodump)

MONGODB_DATA_PATH='/var/lib/mongo{{ item.name }}/*'

# make sure we can connect to server
    {% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.getUsers()' &>/dev/null
    {% else %}
$MONGO --host $HOST --port $PORT --eval 'db' &>/dev/null
    {% endif %}

if [ $? -ne 0 ]
then
    echo "Cannot connect to '$USER@$HOST'" >&2
    exit 1
fi

{% if mongodb_check_hidden_before_backup|bool == true %}
# check if the instance is hidden
    {% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.isMaster()' | grep '"hidden" : true' &>/dev/null
    {% else %}
$MONGO --host $HOST --port $PORT --eval 'db.isMaster()' | grep '"hidden" : true' &>/dev/null
    {% endif %}

if [ $? -ne 0 ]
then
    echo "Skipping, the instance is not hidden"
    exit 0
fi
{% endif %}

# remove old backups
rm -rf $BACKUP_DIR
mkdir -p $BACKUP_DIR

# lock the instance
{% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.fsyncLock()' &>/dev/null
{% else %}
$MONGO --host $HOST --port $PORT --eval 'db.fsyncLock()' &>/dev/null
{% endif %}

cp --archive --recursive $MONGODB_DATA_PATH $BACKUP_DIR

# unlock the instance
{% if use_auth|bool == true %}
$MONGO --host $HOST --port $PORT --authenticationDatabase $AUTH_DATABASE --username $USER --password $PASSWORD --eval 'db.fsyncUnlock()' &>/dev/null
{% else %}
$MONGO --host $HOST --port $PORT --eval 'db.fsyncUnlock()' &>/dev/null
{% endif %}
{% endif %}
