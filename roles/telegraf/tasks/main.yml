- block:

  - name: 'install telegraf'
    ansible.builtin.package:
      name: 'telegraf'
      state: 'present'

  - name: 'Deploy /etc/telegraf/telegraf.conf'
    ansible.builtin.template:
      src: 'etc/telegraf/telegraf.conf.j2'
      dest: '/etc/telegraf/telegraf.conf'
      owner: 'root'
      group: 'root'
      mode: 0o644
    notify: 'telegraf: systemctl restart telegraf.service'

  - name: 'Remove rpmnew / rpmsave (and Debian equivalents)'
    ansible.builtin.include_role:
      name: 'shared'
      tasks_from: 'remove-rpmnew-rpmsave.yml'
    vars:
      shared__remove_rpmnew_rpmsave_config_file: '/etc/telegraf/telegraf.conf'

  - name: 'Deploy /etc/telegraf/telegraf.d configs'
    ansible.builtin.template:
      src: 'etc/telegraf/telegraf.d/{{ item["template"] }}.conf.j2'
      dest: '/etc/telegraf/telegraf.d/{{ item["filename"] }}.conf'
      owner: 'root'
      group: 'root'
      mode: 0o644
    when:
      - 'item["state"] | d("present") != "absent"'
    loop: '{{ telegraf__conf__combined_var }}'
    notify: 'telegraf: systemctl restart telegraf.service'

  - name: 'Remove /etc/telegraf/telegraf.d configs'
    ansible.builtin.file:
      dest: '/etc/telegraf/telegraf.d/{{ item["filename"] }}.conf'
      state: 'absent'
    when:
      - 'item["state"] | d("present") == "absent"'
    loop: '{{ telegraf__conf__combined_var }}'
    notify: 'telegraf: systemctl restart telegraf.service'

  tags:
    - 'telegraf'


- block:

  - name: 'systemctl {{ telegraf__service_enabled | bool | ternary("enable", "disable") }} telegraf.service'
    ansible.builtin.systemd:
      name: 'telegraf.service'
      enabled: '{{ telegraf__service_enabled }}'

  - name: 'systemctl {{ telegraf__service_state[:-2] }} telegraf.service'
    ansible.builtin.systemd:
      name: 'telegraf.service'
      state: '{{ telegraf__service_state }}'
    register: 'telegraf__service_state_result'

  tags:
    - 'telegraf'
    - 'telegraf:state'
