- name: 'Run commands'
  ansible.builtin.shell:
    cmd: '{{ item["commands"] }}'
    chdir: '{{ item["chdir"] | d(omit) }}'
    creates: '{{ (item["run_once"] | d(false)) | ternary("/etc/ansible/facts.d/shell_" ~ item["name"] ~ ".state", item["creates"]) | d(omit) }}'
    removes: '{{ item["removes"] | d(omit) }}'
    stdin: '{{ item["stdin"] | d(omit) }}'
    stdin_add_newline: '{{ item["stdin_add_newline"] | d(omit) }}'
  become: '{{ "user" in item }}'
  become_user: '{{ item["user"] | d(omit) }}'
  ignore_errors: '{{ item["ignore_errors"] | d(false) }}'
  when:
    - 'item["state"] | d("present") != "absent"'
  register: 'shell__commands__result'

- name: 'Create state file in /etc/ansible/facts.d if run_once is true'
  # using copy instead of file with state touch so that it is not always changed
  ansible.builtin.copy:
    content: ''
    dest: '/etc/ansible/facts.d/shell_{{ item["name"] }}.state'
    owner: 'root'
    group: 'root'
    mode: 0o600
  when:
    - 'item["state"] | d("present") != "absent"'
    - 'item["run_once"] | d(false)'

- name: 'Output'
  ansible.builtin.debug:
    var: 'shell__commands__result'
