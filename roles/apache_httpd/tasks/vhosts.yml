# Manage Apache virtual hosts

- name: 'Combined vHosts:'
  ansible.builtin.debug:
    var: 'apache_httpd__vhosts__combined_var'

- name: 'Remove sites-available vhosts'
  ansible.builtin.file:
    path: '{{ apache_httpd__config_path }}/sites-available/{{ item["value"]["filename"] | d(item["value"]["conf_server_name"] ~ "." ~ (item["value"]["virtualhost_port"] | d(443))) }}.conf'
    state: 'absent'
  when:
    - 'item["value"]["state"] | d("present") == "absent"'
  loop: '{{ apache_httpd__vhosts__combined_var | dict2items }}'

- name: 'Create sites-available configuration'
  ansible.builtin.template:
    src: 'etc/httpd/sites-available/{{ item["value"]["template"] }}.conf.j2'
    dest: '{{ apache_httpd__config_path }}/sites-available/{{ item["value"]["filename"] | d(item["value"]["conf_server_name"] ~ "." ~ (item["value"]["virtualhost_port"] | d(443))) }}.conf'
    owner: 'root'
    group: 'root'
    mode: 0o644
  when:
    - 'item["value"]["state"] | d("present") != "absent"'
  loop: '{{ apache_httpd__vhosts__combined_var | dict2items }}'
  notify:
    - 'apache_httpd: httpd -t; systemctl reload httpd'

- name: 'Create DocumentRoot for all vHosts'
  ansible.builtin.file:
    path: '{{ item["value"]["conf_document_root"] | d(apache_httpd__conf_document_root ~ "/" ~ item["value"]["conf_server_name"]) }}'
    state: 'directory'
    # do not set permissions, we might need special ones such as sticky bits
  when:
    - 'item["value"]["template"] in ["app", "localhost"]'
    - 'item["value"]["state"] | d("present") != "absent"'
  loop: '{{ apache_httpd__vhosts__combined_var | dict2items }}'

- name: 'Disable vhosts'
  ansible.builtin.file:
    path: '{{ apache_httpd__config_path }}/sites-enabled/{{ item["value"]["filename"] | d(item["value"]["conf_server_name"] ~ "." ~ (item["value"]["virtualhost_port"] | d(443))) }}.conf'
    mode: 0o644
    state: 'absent'
  loop: '{{ apache_httpd__vhosts__combined_var | dict2items }}'
  when: 'not item["value"]["enabled"] | d(true)
        or item["value"]["state"] | d("present") == "absent"'
  notify:
    - 'apache_httpd: httpd -t; systemctl reload httpd'

- name: 'Enable vhosts'
  ansible.builtin.file:
    src: '../sites-available/{{ item["value"]["filename"] | d(item["value"]["conf_server_name"] ~ "." ~ (item["value"]["virtualhost_port"] | d(443))) }}.conf'
    path: '{{ apache_httpd__config_path }}/sites-enabled/{{ item["value"]["filename"] | d(item["value"]["conf_server_name"] ~ "." ~ (item["value"]["virtualhost_port"] | d(443))) }}.conf'
    mode: 0o644
    state: 'link'
  loop: '{{ apache_httpd__vhosts__combined_var | dict2items }}'
  when:
    - 'item["value"]["enabled"] | d(true)'
    - 'item["value"]["state"] | d("present") != "absent"'
  notify:
    - 'apache_httpd: httpd -t; systemctl reload httpd'
